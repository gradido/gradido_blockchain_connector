# Iota Entry Node, host and port
iota.host=api.lb-0.h.chrysalis-devnet.iota.cafe
# use https for port 443, else use http
iota.port=443

# gradido node for asking for already registered groups
gradidoNode=http://127.0.0.1:8340

# GradidoBlockchainConnector Port 
JSONServer.port = 1271

# db config for mysql or mariadb
db.host = localhost
db.port = 3306
db.name = blockchain_connector
db.user = root
# make sure not to use special characters in mysql/mariadb password!
# sadly the C-Connector cannot handle special charactes in mysql/mariadb passwords
db.password =


# x25519 public key for encryption of passphrases for new users 
# public and private key of user can be recovered with passphrase in case of user forgott password
# you should store the corresponding private key savely and not on the server
# can be created for example with: crypto_box_keypair from libsodium https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption
# (please change for your app)
crypto.server_admin_public = 688c31a1750c26c38f8f78eb921b015a88db0ff61392d65416982d059b14de4b

# random binary, used for hashing passwords
# should be at least 16 bytes long (32 character in hex)
# (please change for your app)
crypto.server_key = a51ef8ac7ef1abf162fb7a65261acd7a

# random binary, used as additional salt for generating secret key for encryption of user private key
# (please change for your app)
crypto.app_secret = 21ffbbc616fe

# x25519 private key for decrypt user password from login requests
# can be created for example with: crypto_box_keypair from libsodium https://libsodium.gitbook.io/doc/public-key_cryptography/authenticated_encryption
# (please change for your app)
crypto.jwt.private = 2acd42ec14e12eecded40e300d420eabbf58f01d3cb3cf1eaf522af49ec92193

# random string for jwt sign and verify (please change for your app)
# (please change for your app)
verify.jwt = sjhrj7jDU38ikrlaksi092%6$2ujkas92l

# duration in which a session is valid
# jwt token duration time and how long a session and therefor an unencrypted private key will be stored in memory
session.duration_seconds = 600

# allow request from another server, for example from js frontend
unsecure.allow_cors_all=1




